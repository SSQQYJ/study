  // 解密密码
    public static String decrypt(String encryptedPassword) {
        StringBuilder decryptedPassword = new StringBuilder(encryptedPassword);
        //将解密后的密码进行反转，并且如果密码的长度大于等于2，则将密码的第一个字符和最后一个字符进行交换。
        decryptedPassword.reverse();
        if (decryptedPassword.length() >= 2) {
            char firstChar = decryptedPassword.charAt(0);
            char lastChar = decryptedPassword.charAt(decryptedPassword.length() - 1);
            decryptedPassword.setCharAt(0, lastChar);
            decryptedPassword.setCharAt(decryptedPassword.length() - 1, firstChar);
        }
       //解密密码函数
        for (int i = 0; i < decryptedPassword.length(); i++) {
            char c = decryptedPassword.charAt(i);
            int ascii = (int) c - i - 1 - 3;
            decryptedPassword.setCharAt(i, (char) ascii);
        }
        return decryptedPassword.toString();
    }
}