  // 加密密码
public static String encrypt(String password) {
        StringBuilder encryptedPassword = new StringBuilder();
        /*
        代码逐个遍历密码中的字符，对每个字符进行以下操作：
        1. 获取字符的ASCII码值。
        2. 将ASCII码值加上字符在密码中的位置索引（i+1） 再加上3。
        3. 将得到的结果转换为对应的字符，并将其追加到加密密码字符串中。
         */
        for (int i = 0; i < password.length(); i++) {
            char c = password.charAt(i);
            int ascii = (int) c + i + 1 + 3;
            encryptedPassword.append((char) ascii);
        }
        //将加密密码的第一个字符和最后一个字符交换位置。
        if (encryptedPassword.length() >= 2) {
            char firstChar = encryptedPassword.charAt(0);
            char lastChar = encryptedPassword.charAt(encryptedPassword.length() - 1);
            encryptedPassword.setCharAt(0, lastChar);
            encryptedPassword.setCharAt(encryptedPassword.length() - 1, firstChar);
        }
        encryptedPassword.reverse();
        return encryptedPassword.toString();
    }